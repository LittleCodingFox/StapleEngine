{
	"type": "VertexFragment",
	"sourceBlend": "SrcAlpha",
	"destinationBlend": "OneMinusSrcAlpha",
	"parameters": [
		{
			"name": "a_position",
			"semantic": "Varying",
			"type": "Vector3",
			"attribute": "POSITION"
		},
		{
			"name": "a_color1",
			"semantic": "Varying",
			"type": "Vector3",
			"attribute": "COLOR1"
		},
		{
			"name": "v_view",
			"semantic": "Varying",
			"type": "Vector3",
			"attribute": "TEXCOORD0"
		},
		{
			"name": "v_bc",
			"semantic": "Varying",
			"type": "Vector3",
			"attribute": "TEXCOORD1"
		},
		{
			"name": "mainColor",
			"semantic": "Uniform",
			"type": "Color"
		},
		{
			"name": "cameraPosition",
			"semantic": "Uniform",
			"type": "Vector4"
		},
		{
			"name": "opacity",
			"semantic": "Uniform",
			"type": "Vector4"
		},
		{
			"name": "thickness",
			"semantic": "Uniform",
			"type": "Vector4"
		}
	],
	"vertex": {
		"inputs": [
			"a_position", "a_color1"
		],
		"outputs": [
			"v_view",
			"v_bc"
		],
		"code": [
			"void main()",
			"{",
			"   mat4 projViewWorld = mul(mul(u_proj, u_view), u_model[0]);",
			"",
			"   vec4 v_pos = mul(projViewWorld, vec4(a_position, 1.0));",
			"",
			"   v_view = cameraPosition.xyz - mul(u_model[0], vec4(a_position, 1.0)).xyz;",
			"",
			"   v_bc = a_color1;",
			"",
			"   gl_Position = v_pos;",
			"}"
		]
	},
	"fragment": {
		"inputs": [
			"v_view",
			"v_bc"
		],
		"code": [
			"void main()",
			"{",
			"   float o = opacity.r;",
			"",
			"   if(gl_FrontFacing) { o *= 0.5; }",
			"",
			"   vec3 fw = abs(dFdx(v_bc)) + abs(dFdy(v_bc));",
			"",
			"   vec3 val = smoothstep(vec3_splat(0.0), fw * thickness.r, mainColor.rgb);",
			"",
			"   float edge = min(min(val.x, val.y), val.z);",
			"",
			"   vec4 rgba = vec4(mainColor.rgb, (1.0 - edge) * o);",
			"",
			"   gl_FragColor = rgba;",
			"}"
		]
	}
}